
Sunday December 15th, 2019

The epic SICP journey begins for real :). The day for the first set of exercises. I found it necessary to add a year into the date above - who knows how many years this will take to complete...

No obstacles with the content of the exercises, but several stupid mistakes with parenthesis, and struggling to understand how to use Emacs. Ended up googling emacs topics. While googling, someone said that Emacs is excellent as a normal text editor. Go Figure! Therefore, these notes are now officially being recorded using emacs. Maybe one of the bigger learnings from the journey will be to become proficient in Emacs as a tool?

It took quite some time to get through the first 5 (easy?) exercises...

Exercises 1.1, 1.2, 1.3, 1.4, 1.5
1h 50 min

Monday December 16th, 2019

Trying to get going with the (new) routine of doing exercises often. Therefore, two exercises for today. The latter one was the improved newton method for square roots. Quite a lot of iteration, but nothing where I would have felt completely stuck. Two exercises, 1h 20 mins still...

Exercises 1.6, 1.7
1h 20 min

Friday December 27th, 2019

Apparently didn't then manage to follow the (new) routine of doing exercises often. Well, there you go. Now it is Christmas holiday, so should be possible to spend more time with this daily.

Cube-root exercise was simple - it was based on the previous exercise. Time taken included reading chapter 1.2.1

Exercises 1.8, 1.9
1h 15 min

Saturday December 28th, 2019 - morning

A lot of time spent and struggle. Understanding "iterative" process implemented as "recursive" function does not fit into the way my brain is wired - it seems. Have had problems understanding how to write recursive functions already earlier. So not a big surprise. Three hours spent and two exercises done. Had to find some help with the iterative process in the end. Time also includes reading chapter 1.2.2.

"Counting change" example was interesting. No exercises on that though?

Exercises 1.10, 1.11
3h 0 min

Saturday December 28th, 2019 - afternoon

Exercises take a lot of time. I skipped the induction exercise 1.13. Drawing up the tree for recursive calls was in the end not overly difficult, but just took a lot of time. Didn't really calculate the space and growth requirements with math, rather looking at the behavior (and in the end studied from internet solutions how it could have been calculated...

Exercises 1.12, 1.14.
2h 30 min

Monday January 6th, 2020

Moving to section with exponentiation algorithms. More exercises for designing algorithms, in functional programming mindset. Have had problems understanding how to design recursive, recursive-iterative algortihms. How are they supposed to be "iterative" when they are recursive...? However, seems easier now than last time. Regardless, ended up spending a lot of time on these - again.

Exercises 1.15, 1.16.
2h 0 min
Cumulative hours on exercises: 11h 55 min
